/*
 * withString.c
 *
 *  Created on: 2015年8月3日
 *      Author: Song Zhi-Cheng
 */
#include "General.h"

int myAtoi(char* str){
	int flags = 1;
	int res = 0;
	if(!str) return 0;
	while(*str == ' ') str++;
	if(*str == '+') {
		str++;
		if(*str == '-') return 0;
	}
	if(*str == '-') {
		str++;
		flags = -1*flags;
		if(*str == '+') return 0;
	}
	while(*str>='0'&&*str<='9'){
		res = res*10+*str-'0';
		str++;
	}
	return res*flags;
}


char *myReverse(char* str){
	if(!str) return NULL;
	char tmp;
	char* p = str;
	char* q = str;
	while(*q) q++;
	q--;	//key
	while(q > p) {
		tmp = *p;
		*p = *q;
		*q = tmp;
		q--;
		p++;
	}

	return str;
}

char* myItoA(int integer){
	static char str[30] = {0};//key
	int i = 0;
	char flag = 0;
	if(integer < 0){
		flag = '-';
		integer = integer*(-1);
	}
	while(integer != 0){
		str[i++] = integer%10 + '0';
		integer = integer/10;
	}
	str[i] = flag;
	myReverse(str);
	return str;
}


int searchSubstr(char* des,char* sub){
	if(!des || !sub) return -1;
	int count = 0;
	char* ptr = sub;
	while(*des){
		if(*des == *sub && *sub!='\0'){
			des++;
			sub++;
		}else{
			des++;
			sub=ptr;
		}
		if(!(*sub)){
			count++;
			sub=ptr;
		}

	}
	return count;
}



/*
 *
Given an input string, reverse the string word by word.

For example,
Given s = "the sky is blue",
return "blue is sky the".
 */

void reverseWords(char *s) {

	myReverse(s);
	char* p = s;
	char* q = s;

	while(*q!='\0'){
		if(*q == ' '){
			char* p1 = p;
			char* q1 = q-1;
			while(p1 < q1){
				char tmp = *p1;
				*p1 = *q1;
				*q1 = tmp;
				q1--;
				p1++;
			}
			p = q+1;
		}q++;
	}
	char* p2 = p;
	char* q2 = q-1;
	while(p2 < q2){
		char tmp = *p2;
		*p2 = *q2;
		*q2 = tmp;
		q2--;
		p2++;
	}

}


int replaceBlank(char string[], int length) {
	int i,j;
	for(i = 0;i < length; i++) {
		if(string[i] == ' ') {
			for(j = length+2; j > i+2; j--) {
				string[j] = string[j-2];
			}
			string[i] = '%';
			string[i+1] = '2';
			string[i+2] = '0';
			length = length+2;
		}
	}
	return length;
}

//最后一个单词的长度
int lengthOflastword(char* arr){
	if(!arr) return -1;
	int count = 0;
	int newcount = 0;
	while(*arr != '\0'){
		if(*arr != ' ') count++;;
		if(*arr == ' ' || *(arr+1) =='\0'){
			newcount = count;
			count = 0;
		}
		arr++;
	}
	return newcount;
}


//旋转字符串  给定一个字符串和一个偏移量，根据偏移量旋转字符串(从左向右旋转)

void rotateString(char* str,int offset){
	if(!str) return;
	int count;
	while(*str != '\0') count++;
	if(offset > count) return;
	if(offset == 0) return;
	else{
		while(offset){
			int n = offset
		}
	}

}






